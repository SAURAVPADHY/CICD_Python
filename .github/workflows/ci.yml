name: COVID-19 Flask App CI/CD

on:
  workflow_dispatch:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: COVID-19-Spread-Analysis-with-Flask
  PYTHON_VERSION: '3.10'
  RESOURCE_GROUP: Test

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black
      - name: Run linters
        run: |
          flake8 . --max-line-length=110

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy==1.24.3
          pip install pandas==1.5.3
          pip install folium==0.14.0
          pip install flask==2.3.3
          pip install pytest==7.4.0
          pip install pytest-cov
      - name: Run tests with coverage
        run: |
          pytest tests/ -v --cov=./ --cov-report=xml
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Configure Python and startup
        run: |
          az webapp config set --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --linux-fx-version "PYTHON|3.10"
          az webapp config appsettings set --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true WEBSITE_WEBDEPLOY_USE_SCM=false
          az webapp config appsettings set --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --settings appCommandLine="gunicorn --bind=0.0.0.0 --timeout 600 app:app"
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: .
      - name: Health check
        run: |
          sleep 30  # Wait for deployment to stabilize
          curl --fail https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/ || exit 1
